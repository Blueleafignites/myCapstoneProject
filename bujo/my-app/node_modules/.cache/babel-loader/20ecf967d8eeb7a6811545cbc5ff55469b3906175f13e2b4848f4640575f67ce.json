{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Bluem\\\\Documents\\\\School Related\\\\2023\\\\Winter\\\\Capstone App Development\\\\bujo_project\\\\bujo\\\\my-app\\\\src\\\\data.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Lists from './Lists';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Data() {\n  _s();\n  const [priorities, setPriorities] = useState([]);\n  const [tags, setTags] = useState([]);\n  const [tasks, setTasks] = useState([]);\n  useEffect(() => {\n    const fetchPriorities = async () => {\n      const res = await axios.get('http://localhost:3000/priorities');\n      setPriorities(res.data);\n    };\n    const fetchTags = async () => {\n      const res = await axios.get('http://localhost:3000/tags');\n      setTags(res.data);\n    };\n    const fetchTasks = async () => {\n      const res = await axios.get('http://localhost:3000/tasks');\n      setTasks(res.data);\n    };\n    fetchPriorities();\n    fetchTags();\n    fetchTasks();\n  }, []);\n  const deleteTasksByListId = async listId => {\n    try {\n      const res = await axios.delete(`http://localhost:3000/lists/${listId}/tasks`);\n      return res.data;\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  const deleteTaskById = async taskId => {\n    try {\n      const res = await axios.delete(`http://localhost:3000/tasks/${taskId}`);\n      return res.data;\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  const moveAllTasksToList = async (movedTaskIds, targetListId) => {\n    try {\n      await axios.put(`http://localhost:3000/lists/${targetListId}/tasks`, {\n        taskIds: movedTaskIds\n      });\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  const getTasks = (sortByDueDate, sortAlphabetically) => {\n    return axios.get('/tasks', {\n      params: {\n        sortByDueDate,\n        sortAlphabetically\n      }\n    }).then(response => {\n      return response.data;\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n  const updateTask = async (taskId, updatedTask) => {\n    try {\n      const res = await axios.put(`http://localhost:3000/tasks/${taskId}`, updatedTask);\n      return res.data;\n    } catch (error) {\n      console.error(error);\n      return null;\n    }\n  };\n  const addTask = async newTask => {\n    try {\n      const res = await axios.post('http://localhost:3000/tasks', newTask);\n      return res.data.taskId;\n    } catch (error) {\n      console.error(error);\n      return null;\n    }\n  };\n  const updatePriorityName = async (priorityId, updatedPriority) => {\n    try {\n      const res = await axios.put(`http://localhost:3000/priorities/${priorityId}`, updatedPriority);\n      return res.data;\n    } catch (error) {\n      console.error(error);\n      return null;\n    }\n  };\n  const deleteTag = async tagId => {\n    console.log(tagId);\n    try {\n      const res = await axios.delete(`http://localhost:3000/tags/${tagId}`);\n      return res.data;\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Lists, {\n      priorities: priorities,\n      setPriorities: setPriorities,\n      tags: tags,\n      setTags: setTags,\n      tasks: tasks,\n      setTasks: setTasks,\n      deleteTasksByListId: deleteTasksByListId,\n      deleteTaskById: deleteTaskById,\n      moveAllTasksToList: moveAllTasksToList,\n      getTasks: getTasks,\n      updateTask: updateTask,\n      addTask: addTask,\n      updatePriorityName: updatePriorityName,\n      deleteTag: deleteTag\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(Data, \"KTAIr2Q7xzfx67oyukb7BCOUEyE=\");\n_c = Data;\nexport default Data;\nvar _c;\n$RefreshReg$(_c, \"Data\");","map":{"version":3,"names":["React","useState","useEffect","axios","Lists","jsxDEV","_jsxDEV","Fragment","_Fragment","Data","_s","priorities","setPriorities","tags","setTags","tasks","setTasks","fetchPriorities","res","get","data","fetchTags","fetchTasks","deleteTasksByListId","listId","delete","error","console","deleteTaskById","taskId","moveAllTasksToList","movedTaskIds","targetListId","put","taskIds","getTasks","sortByDueDate","sortAlphabetically","params","then","response","catch","log","updateTask","updatedTask","addTask","newTask","post","updatePriorityName","priorityId","updatedPriority","deleteTag","tagId","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Bluem/Documents/School Related/2023/Winter/Capstone App Development/bujo_project/bujo/my-app/src/data.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport Lists from './Lists';\r\n\r\nfunction Data() {\r\n  const [priorities, setPriorities] = useState([]);\r\n  const [tags, setTags] = useState([]);\r\n  const [tasks, setTasks] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchPriorities = async () => {\r\n      const res = await axios.get('http://localhost:3000/priorities');\r\n      setPriorities(res.data);\r\n    };\r\n\r\n    const fetchTags = async () => {\r\n      const res = await axios.get('http://localhost:3000/tags');\r\n      setTags(res.data);\r\n    };\r\n\r\n    const fetchTasks = async () => {\r\n      const res = await axios.get('http://localhost:3000/tasks');\r\n      setTasks(res.data);\r\n    };\r\n\r\n    fetchPriorities();\r\n    fetchTags();\r\n    fetchTasks();\r\n  }, []);\r\n\r\n  const deleteTasksByListId = async (listId) => {\r\n    try {\r\n      const res = await axios.delete(`http://localhost:3000/lists/${listId}/tasks`);\r\n      return res.data;\r\n\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  const deleteTaskById = async (taskId) => {\r\n    try {\r\n      const res = await axios.delete(`http://localhost:3000/tasks/${taskId}`);\r\n      return res.data;\r\n\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  const moveAllTasksToList = async (movedTaskIds, targetListId) => {\r\n    try {\r\n      await axios.put(`http://localhost:3000/lists/${targetListId}/tasks`, {\r\n        taskIds: movedTaskIds,\r\n      });\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  const getTasks = (sortByDueDate, sortAlphabetically) => {\r\n    return axios.get('/tasks', {\r\n      params: {\r\n        sortByDueDate,\r\n        sortAlphabetically\r\n      }\r\n    })\r\n      .then(response => {\r\n        return response.data;\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const updateTask = async (taskId, updatedTask) => {\r\n    try {\r\n      const res = await axios.put(`http://localhost:3000/tasks/${taskId}`, updatedTask);\r\n      return res.data;\r\n\r\n    } catch (error) {\r\n      console.error(error);\r\n      return null;\r\n    }\r\n  };\r\n\r\n  const addTask = async (newTask) => {\r\n    try {\r\n      const res = await axios.post('http://localhost:3000/tasks', newTask);\r\n      return res.data.taskId;\r\n\r\n    } catch (error) {\r\n      console.error(error);\r\n      return null;\r\n    }\r\n  };\r\n\r\n  const updatePriorityName = async (priorityId, updatedPriority) => {\r\n    try {\r\n      const res = await axios.put(`http://localhost:3000/priorities/${priorityId}`, updatedPriority);\r\n      return res.data;\r\n\r\n    } catch (error) {\r\n      console.error(error);\r\n      return null;\r\n    }\r\n  };\r\n  \r\n  const deleteTag = async (tagId) => {\r\n    console.log(tagId)\r\n    try {\r\n      const res = await axios.delete(`http://localhost:3000/tags/${tagId}`);\r\n      return res.data;\r\n\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n  \r\n\r\n  return (\r\n    <>\r\n      <Lists priorities={priorities} setPriorities={setPriorities} tags={tags} setTags={setTags} tasks={tasks} setTasks={setTasks} deleteTasksByListId={deleteTasksByListId} deleteTaskById={deleteTaskById} moveAllTasksToList={moveAllTasksToList} getTasks={getTasks} updateTask={updateTask} addTask={addTask} updatePriorityName={updatePriorityName} deleteTag={deleteTag} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Data;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}